
name: Release

on:
  pull_request:
    types:
      - closed
  workflow_dispatch:

jobs:
  build:
    if: (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main') || (github.event_name == 'workflow_dispatch')
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            bin: happy_ctrl
          - os: macos-latest
            target: aarch64-apple-darwin
            bin: happy_ctrl
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: happy_ctrl
            ext: .exe
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: happy_ctrl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            bin: happy_ctrl

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable && rustup default stable && rustup target add ${{ matrix.target }}
      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}
      - name: Rename binary
        run: mv target/${{ matrix.target }}/release/${{ matrix.bin }}${{ matrix.ext }} target/${{ matrix.target }}/release/${{ matrix.bin }}-${{ matrix.target }}${{ matrix.ext }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.bin }}-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ matrix.bin }}-${{ matrix.target }}${{ matrix.ext }}

  build-windows-aarch64:
    if: (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main') || (github.event_name == 'workflow_dispatch')
    name: Build aarch64-pc-windows-msvc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable && rustup default stable && rustup target add aarch64-pc-windows-msvc
      - name: Install linker
        run: sudo apt-get update && sudo apt-get install -y clang lld
      - name: Build binary
        run: |
          echo '[target.aarch64-pc-windows-msvc]' >> ~/.cargo/config.toml
          echo 'linker = "clang"' >> ~/.cargo/config.toml
          echo 'rustflags = ["-C", "link-arg=-fuse-ld=lld"]' >> ~/.cargo/config.toml
          cargo build --release --target aarch64-pc-windows-msvc
      - name: Rename binary
        run: mv target/aarch64-pc-windows-msvc/release/happy_ctrl.exe target/aarch64-pc-windows-msvc/release/happy_ctrl-aarch64-pc-windows-msvc.exe
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: happy_ctrl.exe-aarch64-pc-windows-msvc
          path: target/aarch64-pc-windows-msvc/release/happy_ctrl-aarch64-pc-windows-msvc.exe

  release:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    name: Release
    needs: [build, build-windows-aarch64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${{ env.CARGO_PKG_VERSION }}
        env:
          CARGO_PKG_VERSION: $(grep '^version' Cargo.toml | egrep -o "[0-9.]+")
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          body: ${{ github.event.pull_request.body }}
          files: artifacts/*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
